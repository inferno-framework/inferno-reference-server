<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.mitre.fhir</groupId>
  <artifactId>inferno-reference-server</artifactId>
  <version>2.2.1</version>
  <packaging>war</packaging>

  <name>Inferno FHIR Reference Server</name>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <hapi.version>7.0.2</hapi.version>
    <jetty_version>12.0.8</jetty_version>
    <checkstyle.plugin.version>3.3.1</checkstyle.plugin.version>
    <checkstyle.version>10.15.0</checkstyle.version>
    <checkstyle.config>config/checkstyle/checkstyle.xml</checkstyle.config>
  </properties>

  <dependencies>
    <!-- HAPI-FHIR core classes. -->
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-base</artifactId>
      <version>${hapi.version}</version>
    </dependency>

    <!-- HAPI-FHIR JPA server, model, and data structures. -->
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-jpaserver-base</artifactId>
      <version>${hapi.version}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-jpaserver-model</artifactId>
      <version>${hapi.version}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-structures-r4</artifactId>
      <version>${hapi.version}</version>
    </dependency>

    <!-- HAPI-FHIR tester web app overlay. Delete if not needed. -->
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-testpage-overlay</artifactId>
      <version>${hapi.version}</version>
      <type>war</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-testpage-overlay</artifactId>
      <version>${hapi.version}</version>
      <classifier>classes</classifier>
      <scope>provided</scope>
    </dependency>
    <!-- HFQL is required for the testpage-overlay; get a NoClassDefFoundError without it -->
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-jpaserver-hfql</artifactId>
      <version>${hapi.version}</version>
    </dependency>

    <!-- Required for Jetty to work with websockets. -->
      <dependency>
        <groupId>org.eclipse.jetty.ee10.websocket</groupId>
        <artifactId>jetty-ee10-websocket-jakarta-client</artifactId>
        <version>${jetty_version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty.ee10.websocket</groupId>
        <artifactId>jetty-ee10-websocket-jakarta-server</artifactId>
        <version>${jetty_version}</version>
      </dependency>

    <!-- Required for logging to work. -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.5.5</version>
    </dependency>

    <!-- Required for JEE/Servlet support. -->
    <dependency>
        <groupId>jakarta.servlet</groupId>
        <artifactId>jakarta.servlet-api</artifactId>
        <version>6.0.0</version>
        <scope>provided</scope>
    </dependency>

    <!-- You may not need this if you are deploying to an application server -->
    <!-- which provides database connection pools itself. -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-dbcp2</artifactId>
      <version>2.5.0</version>
    </dependency>

    <!-- Postgres database driver. -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.3.10</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty.ee10</groupId>
      <artifactId>jetty-ee10-webapp</artifactId>
      <scope>test</scope>
      <version>${jetty_version}</version>
	</dependency>

	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-test</artifactId>
	  <version>6.1.5</version>
	  <scope>test</scope>
	</dependency>

	<!-- https://mvnrepository.com/artifact/junit/junit -->
	<dependency>
	  <groupId>junit</groupId>
	  <artifactId>junit</artifactId>
	  <version>4.13.1</version>
	  <scope>test</scope>
	</dependency>
		
	<!-- This example uses H2 embedded database for test cases. -->
	<dependency>
	  <groupId>com.h2database</groupId>
	  <artifactId>h2</artifactId>
	  <version>2.2.224</version>
	  <scope>test</scope>
	</dependency>


    <!-- for jwt support -->
    <dependency>
	  <groupId>com.auth0</groupId>
	  <artifactId>java-jwt</artifactId>
	  <version>4.4.0</version>
	</dependency>
	<dependency>
      <groupId>com.auth0</groupId>
      <artifactId>jwks-rsa</artifactId>
      <version>0.22.1</version>
	</dependency>
		
	<dependency>
	  <groupId>org.json</groupId>
	  <artifactId>json</artifactId>
	  <version>20240303</version>
	</dependency>

    <!-- TODO: remove this.
      originally a nested dependency of hapi-jpaserver, only used for randomness in testing. -->
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <version>2.10.9.2</version>
    </dependency>

		<!-- https://mvnrepository.com/artifact/org.webjars/bootstrap -->
		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>bootstrap</artifactId>
			<version>4.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.npm</groupId>
			<artifactId>popper.js</artifactId>
			<version>1.16.0</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>Eonasdan-bootstrap-datetimepicker</artifactId>
			<version>4.17.43</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>font-awesome</artifactId>
			<version>5.8.2</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>awesome-bootstrap-checkbox</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jstimezonedetect</artifactId>
			<version>1.0.6</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>select2</artifactId>
			<version>4.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>jquery</artifactId>
			<version>3.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>moment</artifactId>
			<version>2.29.4</version>
		</dependency>

      <dependency>
        <groupId>org.webjars.npm</groupId>
        <artifactId>ace-builds</artifactId>
        <version>1.22.0</version>
      </dependency>
		
		<!-- For testing with custom env variables -->
		<dependency>
		  <groupId>uk.org.webcompere</groupId>
		  <artifactId>system-stubs-core</artifactId>
		  <version>2.1.6</version>
		</dependency>
  </dependencies>

  <!--
    dependencyManagement allows us "to directly specify the versions of artifacts
    to be used when they are encountered in transitive dependencies
    or in dependencies where no version has been specified".
    For example, if a direct dependency above brings in a nested dependency
    with a vulnerability, we can bump the nested dependency here.
    (Assuming the new version is still compatible, etc)
    This section should be reviewed every time we bump direct dependencies.
  -->
  <dependencyManagement>
    <dependencies>
      
    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>inferno-fhir-reference-server</finalName>

    <!-- Not required for the application to build. -->
    <!-- Allows you to run locally by running "mvn jetty:run" from the command line. -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.jetty.ee10</groupId>
          <artifactId>jetty-ee10-maven-plugin</artifactId>
          <version>${jetty_version}</version>
          <configuration>
            <webApp>
              <contextPath></contextPath>
              <allowDuplicateFragmentNames>true</allowDuplicateFragmentNames>
            </webApp>
          </configuration>
        </plugin>

	      <!-- Overlay tells the WAR plugin to include the FHIR Tester overlay. -->
	      <!-- You can omit it if you are not using that feature. -->
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-war-plugin</artifactId>
	        <version>3.2.0</version>
	        <configuration>
	          <archive>
	            <manifestEntries>
	              <Build-Time>${maven.build.timestamp}</Build-Time>
	            </manifestEntries>
	          </archive>
	          <overlays>
	            <overlay>
	              <groupId>ca.uhn.hapi.fhir</groupId>
	              <artifactId>hapi-fhir-testpage-overlay</artifactId>
	              <excludes><exclude>META-INF</exclude></excludes>
	            </overlay>
	          </overlays>
	          <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
	        </configuration>
	      </plugin>
	      <plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-enforcer-plugin</artifactId>
			    <version>1.4.1</version>
			    <configuration>
			      <rules><dependencyConvergence/></rules>
			    </configuration>
			  </plugin>

	      <!-- Configure Checkstyle -->
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-checkstyle-plugin</artifactId>
	        <version>${checkstyle.plugin.version}</version>
	        <configuration>
	          <configLocation>${checkstyle.config}</configLocation>
	          <encoding>UTF-8</encoding>
	          <consoleOutput>true</consoleOutput>
	          <failsOnError>true</failsOnError>
	          <violationSeverity>warning</violationSeverity>
	          <linkXRef>false</linkXRef>
	        </configuration>
	        <dependencies>
	          <dependency>
	            <groupId>com.puppycrawl.tools</groupId>
	            <artifactId>checkstyle</artifactId>
	            <version>${checkstyle.version}</version>
	          </dependency>
	        </dependencies>
	        <executions>
	          <execution>
	            <id>validate</id>
	            <phase>validate</phase>
	            <goals>
	              <goal>check</goal>
	            </goals>
	          </execution>
	        </executions>
	      </plugin>
        <plugin>
          <groupId>org.openrewrite.maven</groupId>
          <artifactId>rewrite-maven-plugin</artifactId>
          <version>4.37.0</version>
          <configuration>
            <activeRecipes>
              <recipe>org.openrewrite.java.cleanup.Cleanup</recipe>
            </activeRecipes>
          </configuration>
        </plugin>
        <plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-compiler-plugin</artifactId>
		    <configuration>
		        <compilerArgs>
		            <arg>-parameters</arg>
		        </compilerArgs>
		    </configuration>
		</plugin>
      </plugins>
    </pluginManagement>

  </build>

</project>
